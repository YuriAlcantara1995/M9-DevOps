pipeline {
    //agent {
    //	docker { 
    //		image 'golang' 
    //	}
    //}
    
    //environment {
    //	XDG_CACHE_HOME = '/tmp/.cache'
    //}
    
    agent any
    
    stages {
        stage('Test host') {
            steps {
                sh 'go test'
            }
        }
        stage('Build') {
            steps {
                sh 'go build -o sample main.go'
            }
        }
        stage('Save Artifact') {
            steps {
                archiveArtifacts artifacts: 'sample', followSymlinks: false
            }
        }
        stage('Login into DockerHub') {
        	steps {
        	    withCredentials([usernamePassword(credentialsId: "docker-token", usernameVariable: 'username', passwordVariable: 'password')]) {
         	    sh 'docker  login --username ${username} --password ${password}'    	
         	    }
        	}
        }
    }
}
